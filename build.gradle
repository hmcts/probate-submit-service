buildscript {
  dependencies {
    classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.5'
    classpath("net.serenity-bdd:serenity-gradle-plugin:1.5.2")
  }
  
}

plugins {
  id 'application'
  id 'pmd'
  id 'org.springframework.boot' version '1.5.13.RELEASE'
  id 'org.owasp.dependencycheck' version '3.1.2'
  id 'com.github.ben-manes.versions' version '0.15.0'
  id 'com.gorylenko.gradle-git-properties' version '1.4.21'
}

apply plugin: 'org.sonarqube'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'net.serenity-bdd.aggregator'

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/services/submit")
    keys = ['git.commit.id','git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

group = 'uk.gov.hmcts.probate'
version = "4.1.0"
mainClassName = 'uk.gov.hmcts.probate.SubmitApplication'

sourceCompatibility = 1.8
targetCompatibility = 1.8

check.dependsOn dependencyCheckAnalyze

jacoco {
  toolVersion = '0.8.0'
}

jacocoTestReport {
  group = "Reporting"
  reports {
    xml.enabled false
    html.destination "${buildDir}/reports/jacoco"
  }
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

findbugs{
  ignoreFailures=true
  reportLevel = "low"
}

sonarqube {
  properties {
    property "sonar.projectName", "probate :: submit service"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.host.url", "https://sonar.reform.hmcts.net/"
  }
}

test.finalizedBy jacocoTestReport

dependencyCheck {
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
  scanConfigurations = ['compile']
}

sourceSets {
  testFunctional {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  testSmoke {
      java {
          compileClasspath += main.output
          runtimeClasspath += main.output
          srcDir file('src/smokeTest/java')
      }
      resources.srcDir file('src/smokeTest/resources')
  }
}

task functional(type: Test) {
  description = "Runs functional Tests"
  testClassesDirs = sourceSets.testFunctional.output.classesDirs
  classpath = sourceSets.testFunctional.runtimeClasspath
  finalizedBy aggregate
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.testSmoke.output.classesDirs
  classpath = sourceSets.testSmoke.runtimeClasspath
}

pmd {
  toolVersion = "6.3.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.testFunctional, sourceSets.testSmoke]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven { url "http://artifactory.reform.hmcts.net/artifactory/libs-release" }
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  maven { url "http://repo1.maven.org/maven2/" }
  maven { url "https://plugins.gradle.org/m2/" }
  maven { url  "https://dl.bintray.com/hmcts/hmcts-maven" }
}

def versions = [
    logging: '2.2.1'
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
  compile group: 'org.springframework.retry', name: 'spring-retry'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '0.6.0'
  compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'

  
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test' 

  testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '1.5.2'
  testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '1.5.2'
  testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '1.5.2'
  testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '1.0.26'
  testFunctionalCompile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
  testFunctionalCompile sourceSets.main.runtimeClasspath
  testFunctionalCompile sourceSets.test.runtimeClasspath

  testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'

  testSmokeCompile sourceSets.main.runtimeClasspath
  testSmokeCompile sourceSets.test.runtimeClasspath

}

compileJava {
  options.compilerArgs << '-parameters'
}

jar {
  archiveName = 'submit-service.jar'
  manifest {

    attributes 'Implementation-Title': project.name,
      'Implementation-Version': project.version
  }
}


task printVersion {
  doLast {
    print project.version
  }
}

run {
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}
