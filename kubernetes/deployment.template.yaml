---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
        - image: ${IMAGE_NAME}
          name: ${SERVICE_NAME}
          env:
            - name: REFORM_TEAM
              value: "probate"
            - name: REFORM_SERVICE_NAME
              value: "submit-service"
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: MAIL_JAVAMAILPROPERTIES_MAIL_SMTP_SSL_ENABLE
              value: "false"
            - name: MAIL_JAVAMAILPROPERTIES_MAIL_SMTP_AUTH
              value: "false"
            - name: SERVICES_CORECASEDATA_ENABLED
              value: "true"
            - name: MAIL_JAVAMAILPROPERTIES_SUBJECT
              value: "Probate Application"
            - name: AUTH_PROVIDER_SERVICE_CLIENT_KEY
              value: "${S2S_AUTH_TOTP_SECRET}"
            - name: MAIL_USERNAME
              value: "${PROBATE_SUB_MAIL_USERNAME}"
            - name: MAIL_PASSWORD
              value: "${PROBATE_SUB_MAIL_PASSWORD}"
            - name: MAIL_HOST
              value: "${PROBATE_SUB_MAIL_HOST}"
            - name: MAIL_PORT
              value: "${PROBATE_SUB_MAIL_PORT}"
            - name: MAIL_JAVAMAILPROPERTIES_SENDER
              value: "${PROBATE_SUB_MAIL_SENDER}"
            - name: MAIL_JAVAMAILPROPERTIES_RECIPIENT
              value: "${PROBATE_SUB_MAIL_REC}"
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}-config
          resources:
            requests:
              memory: "1024Mi"
              cpu: "200m"
            limits:
              memory: "2048Mi"
              cpu: "2500m"
          ports:
            - containerPort: 8181
              name: http
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8181
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80

