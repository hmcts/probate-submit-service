plugins {
    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'uk.gov.hmcts.java' version '0.12.61'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'com.gorylenko.gradle-git-properties' version '2.4.2'
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'au.com.dius.pact' version '4.6.9'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.0.1'
    id 'org.sonarqube' version '5.0.0.4638'
    id 'project-report'
    id 'jacoco'
}


gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/services/submit")
    keys = ['git.commit.id', 'git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

application {
    mainClass = 'uk.gov.hmcts.probate.SubmitApplication'
    group = 'uk.gov.hmcts.probate'
    version = "4.1.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jacoco {
    toolVersion = '0.8.12'
}

sonarqube {
    properties {
        property "sonar.exclusions", "**/RegistryConfig.java,**/SecurityConfiguration.java"
        property "sonar.projectName", "probate :: submit service"
        property "sonar.jacoco.reportPath", "${project.rootDir}/jacoco/test.exec"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

project.ext {
  pacticipant = 'probate_submitService'
  pacticipantVersion = getCheckedOutGitCommitHash()
}

test.finalizedBy jacocoTestReport

dependencyCheck {
    suppressionFile = "${project.rootDir}/config/owasp/suppressions.xml"
}

sourceSets {
    testFunctional {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    testContract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
    testPact {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/pactTest/java')
        }
        resources.srcDir file('src/pactTest/resources')
    }
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

task integration(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test) {
    description = "Runs functional Tests"
    testClassesDirs = sourceSets.testFunctional.output.classesDirs
    classpath = sourceSets.testFunctional.runtimeClasspath
    finalizedBy aggregate
}

functional.finalizedBy(aggregate)


task pactTask(type: Test) {
    description = "Runs pact Tests"
    testClassesDirs = sourceSets.testPact.output.classesDirs
    classpath = sourceSets.testPact.runtimeClasspath
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
}

task fortifyScan(type: JavaExec)  {
    getMainClass().set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

tasks.withType(Test) {
    maxHeapSize = "1024m"
    useJUnitPlatform()
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.rootDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

check.dependsOn(integration)

pitest {
    targetClasses = ['uk.gov.hmcts.probate.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

def versions = [
        authCheckerLib                  : '3.0.1',
        ccdClient                       : '5.0.1',
        feignHttpClient                 : '13.3',
        httpclient5                     : '5.3.1',
        junitJupiter                    : '5.9.1',
        lombok                          : '1.18.34',
        logging                         : '6.1.5',
        pact_version                    : '4.1.7',
        probateCommons                  : '1.5.2',
        probatePactCommonsVersion       : '1.0.2',
        restAssured                     : '5.4.0',
        serenity                        : '4.1.14',
        serviceAuthProviderClient       : '5.1.2',
        springBoot                      : '3.3.0',
        springCloudStarterNetflixHystrix: '4.1.1',
        springCloudWiremock             : '4.1.2',
        springDocUi                     : '2.5.0',
        springSecurityTesting           : '6.3.0',
        springSecurityVersion           : '6.3.0',
]

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.1'
    }
}

dependencies {
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: versions.springBoot
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.7'
    compileOnly group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: versions.springBoot
    compileOnly group:'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group:'org.projectlombok', name:'lombok', version: versions.lombok
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: versions.feignHttpClient
    implementation group: 'io.github.openfeign', name: 'feign-hc5', version: versions.feignHttpClient
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: versions.httpclient5
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springCloudStarterNetflixHystrix
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: versions.springDocUi
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.logging
    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: versions.authCheckerLib
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceAuthProviderClient
    implementation group: 'com.github.hmcts', name: 'core-case-data-store-client', version: versions.ccdClient
    implementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommons
    implementation group: 'org.pitest', name: 'pitest', version: '1.16.1'
    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.15.0'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.0'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityTesting
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: versions.springCloudWiremock
    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.1'
    testImplementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceAuthProviderClient
    testImplementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: versions.authCheckerLib
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    testRuntimeOnly group: 'com.github.hmcts', name: 'auth-checker-lib', version: versions.authCheckerLib
    testRuntimeOnly group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceAuthProviderClient

    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.5'
    testFunctionalImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testFunctionalCompileOnly group:'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalAnnotationProcessor group:'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalImplementation sourceSets.main.runtimeClasspath
    testFunctionalImplementation sourceSets.test.runtimeClasspath

    testSmokeImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    testContractImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testContractImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testContractImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testContractImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testContractImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.5'
    testContractImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testContractImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    testContractImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
    testContractImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'
    testContractCompileOnly group:'org.projectlombok', name: 'lombok', version: versions.lombok
    testContractAnnotationProcessor group:'org.projectlombok', name: 'lombok', version: versions.lombok
    testContractImplementation sourceSets.main.runtimeClasspath
    testContractImplementation sourceSets.test.runtimeClasspath

    testPactImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.12.5'
    testPactImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    testPactImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junitJupiter
    testPactImplementation group: 'com.github.hmcts', name: 'probate-pact-commons', version: versions.probatePactCommonsVersion
    testPactImplementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    testPactImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    testPactImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    testPactImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    testPactRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    testPactRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junitJupiter
    testPactRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.8.0-M1'
    testPactImplementation sourceSets.main.runtimeClasspath
    testPactImplementation sourceSets.test.runtimeClasspath

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

ext['snakeyaml.version'] = '2.2'

bootJar {
    archiveFileName = 'submit-service.jar'
    manifest {

        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
}

task runAndPublishConsumerPactTests(type: Test){
    description = "Runs consumer pact Tests"
    testClassesDirs = sourceSets.testPact.output.classesDirs
    classpath = sourceSets.testPact.runtimeClasspath
    include "uk/gov/hmcts/probate/services/submit/controllers/v2/consumer/**"

}

pact {
  broker {
      pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?:'http://localhost:80'
  }
  publish {
    pactDirectory = 'pacts'
    tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
    version = project.pacticipantVersion
  }
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

static def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

rootProject.tasks.named("processResources") {
    dependsOn("generateGitProperties")
}
